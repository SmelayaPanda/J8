package smel.pan.pack3_stream;import java.util.ArrayList;import java.util.List;import java.util.Optional;/** * Created by SmelayaPanda on 21.04.2016. * * @Reduce This terminal operation performs a reduction on the elements of the stream with the given function. * The result is an Optional holding the reduced value. */public class ReduceTest {    public static void main(String[] args) {        List<String> strList = new ArrayList<>();        strList.add("Apple");        strList.add("Mac");        strList.add("IBM");        strList.add("Microsoft");        strList.add("Oracle");        strList.add("Sun");        Optional<String> reduced =                strList                        .stream()                        .sorted()                        .reduce((s1, s2) -> s1 + '#' + s2);        reduced.ifPresent(System.out::println); //Apple#IBM#Mac#Microsoft#Oracle#Sun        System.out.println(strList.get(1)); //Mac (Items in the original collection is not glue)        //(!)The same for Integer List:        List<Integer> intList = new ArrayList<>();        intList.add(1);        intList.add(2);        intList.add(3);        Optional<Integer> reduce =                intList                        .stream()                        .sorted()                        .reduce((int1, int2) -> int1 + int2 + 5);        reduce.ifPresent(System.out::println);  //sum = 1 + 5 + 2 + 5 + 3 = 16    }}